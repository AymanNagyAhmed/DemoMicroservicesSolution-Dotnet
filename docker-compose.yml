version: '3.4'

networks:
  backend:
    driver: bridge

services:
################ service one - customer microservice ################
  customerdb:
    container_name: customer-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password_test123
    networks:
      - backend
    ports:
      - 18001:1433

  customermicroservice:
    container_name: customer-ms
    image: ${DOCKER_REGISTRY-}customermicroservice
    build:
      context: .
      dockerfile: CustomerMicroService/Dockerfile
    networks:
      - backend
    ports:
      - 8001:8080
    environment:
      - DB_HOST=customerdb
      - DB_USER=sa
      - DB_NAME=customer_db
      - DB_SA_PASSWORD=password_test123

################ service two - product microservice ################
  productdb:
    container_name: product-db
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=password_MySql23
    networks:
      - backend
    ports:
      - 18002:3306

  productmicroservice:
    container_name: product-ms
    image: ${DOCKER_REGISTRY-}productmicroservice
    build:
      context: .
      dockerfile: ProductMicroService/Dockerfile
    networks:
      - backend
    ports:
      - 8002:8080
    environment:
      - DB_HOST=productdb
      - DB_NAME=product_db
      - DB_PORT=3306
      - DB_USER=root
      - DB_ROOT_PASSWORD=password_MySql23
    
################ service three - order microservice ################
  orderdb:
    container_name: order-db
    image: mongo:latest
    ports:
      - 18003:27017
    networks:
      - backend
    
  ordermicroservice:
    container_name: order-ms
    image: ${DOCKER_REGISTRY-}ordermicroservice
    build:
      context: .
      dockerfile: OrderMicroService/Dockerfile
    networks:
      - backend
    ports:
      - 8003:8080
    environment:
      - DB_HOST=orderdb
      - DB_NAME=order_ms_db
      - DB_PORT=27017

################################################################################